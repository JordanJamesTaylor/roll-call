continue!
exit
      blob = ActiveStorage::Blob.create_and_upload!(
        io: StringIO.new((Base64.decode64(params[:photo].split(",")[1]))),
        filename: "user.png",
        content_type: "image/png",
      )
      blob = ActiveStorage::Blob.create_after_upload!(
        io: StringIO.new((Base64.decode64(params[:photo].split(",")[1]))),
        filename: "user.png",
        content_type: "image/png",
      )
quit
obj = params[:photo]
q
      blob = ActiveStorage::Blob.create_after_upload!(
        io: StringIO.new((Base64.decode64(params[:photo].split(",")[1]))),
        filename: "user.png",
        content_type: "image/png",
      )
obj.to_io()
obj = params[:photo]
exit
new_roll_call
quit
ARollCall.find(1)
new_roll_call.save!
new_roll_call
new_roll_call.save
new_roll_call
exit
new_roll_call
error
quit
